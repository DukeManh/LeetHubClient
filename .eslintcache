[{"/Users/chrisbui/Documents/leethubclient/src/components/Questions.jsx":"1","/Users/chrisbui/Documents/leethubclient/src/redux/reducer/submissions.js":"2","/Users/chrisbui/Documents/leethubclient/src/components/ProblemLevel.jsx":"3","/Users/chrisbui/Documents/leethubclient/src/components/Header.jsx":"4","/Users/chrisbui/Documents/leethubclient/src/components/QuestionDetail.jsx":"5","/Users/chrisbui/Documents/leethubclient/src/reportWebVitals.js":"6","/Users/chrisbui/Documents/leethubclient/src/components/Main.jsx":"7","/Users/chrisbui/Documents/leethubclient/src/redux/enhancers/monitorReducer.js":"8","/Users/chrisbui/Documents/leethubclient/src/redux/actionTypes.js":"9","/Users/chrisbui/Documents/leethubclient/src/redux/config.js":"10","/Users/chrisbui/Documents/leethubclient/src/components/SubmissionDetail.jsx":"11","/Users/chrisbui/Documents/leethubclient/src/components/Home.jsx":"12","/Users/chrisbui/Documents/leethubclient/src/components/AcTable.jsx":"13","/Users/chrisbui/Documents/leethubclient/src/App.js":"14","/Users/chrisbui/Documents/leethubclient/src/components/Footer.jsx":"15","/Users/chrisbui/Documents/leethubclient/src/components/Submissions.jsx":"16","/Users/chrisbui/Documents/leethubclient/src/redux/reducer/auth.js":"17","/Users/chrisbui/Documents/leethubclient/src/redux/actions/submissions.js":"18","/Users/chrisbui/Documents/leethubclient/src/index.js":"19","/Users/chrisbui/Documents/leethubclient/src/redux/configureStore.js":"20","/Users/chrisbui/Documents/leethubclient/src/redux/actions/auth.js":"21"},{"size":8130,"mtime":1610053609786,"results":"22","hashOfConfig":"23"},{"size":1278,"mtime":1609198515278,"results":"24","hashOfConfig":"23"},{"size":867,"mtime":1609268254946,"results":"25","hashOfConfig":"23"},{"size":5515,"mtime":1610156820408,"results":"26","hashOfConfig":"23"},{"size":2424,"mtime":1610049283229,"results":"27","hashOfConfig":"23"},{"size":362,"mtime":1608440994446,"results":"28","hashOfConfig":"23"},{"size":2035,"mtime":1609975048429,"results":"29","hashOfConfig":"23"},{"size":559,"mtime":1607559931629,"results":"30","hashOfConfig":"23"},{"size":443,"mtime":1608853235095,"results":"31","hashOfConfig":"23"},{"size":61,"mtime":1607988992440,"results":"32","hashOfConfig":"23"},{"size":1741,"mtime":1609227702806,"results":"33","hashOfConfig":"23"},{"size":5655,"mtime":1610164462750,"results":"34","hashOfConfig":"23"},{"size":752,"mtime":1609477243477,"results":"35","hashOfConfig":"23"},{"size":523,"mtime":1609477243476,"results":"36","hashOfConfig":"23"},{"size":432,"mtime":1610149788265,"results":"37","hashOfConfig":"23"},{"size":1788,"mtime":1609472635326,"results":"38","hashOfConfig":"23"},{"size":1535,"mtime":1609974086334,"results":"39","hashOfConfig":"23"},{"size":990,"mtime":1608689139389,"results":"40","hashOfConfig":"23"},{"size":500,"mtime":1605804535976,"results":"41","hashOfConfig":"23"},{"size":763,"mtime":1608441494832,"results":"42","hashOfConfig":"23"},{"size":1999,"mtime":1609197985193,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"y2wlru",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/Users/chrisbui/Documents/leethubclient/src/components/Questions.jsx",["92"],"import React, { useEffect, useState, useRef } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { Icon, Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\nimport AcTable from './AcTable';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\n\n\n\nexport default function Questions({ fetchQuestions, questions, authenticated }) {\n    const [active, setActive] = useState('');\n    const [order, setOrder] = useState(true);\n\n    const [problems, setProblems] = useState({ questions: [] });\n\n    const [sortById, setSortById] = useState([]);\n    const [sortByName, setSortByName] = useState([]);\n    const [sortByDifficulty, setSortByDifficulty] = useState([]);\n    const [sortByAcceptance, setSortByAcceptance] = useState([]);\n\n\n    useEffect(() => {\n        if (authenticated && !questions.err\n            && !questions.total && !questions.loading) {\n            fetchQuestions();\n        }\n        else {\n            setProblems(questions);\n        }\n    }, [authenticated, questions, fetchQuestions]);\n\n    useEffect(() => {\n        switch (active) {\n            case 'question_id':\n                setProblems((!order) ? sortById[0] : sortById[1]);\n                break;\n\n            case 'question__title':\n                setProblems((!order) ? sortByName[0] : sortByName[1]);\n                break;\n\n            case 'difficulty':\n                setProblems((!order) ? sortByDifficulty[0] : sortByDifficulty[1]);\n                break;\n            case 'acceptance':\n                setProblems((!order) ? sortByAcceptance[0] : sortByAcceptance[1]);\n                break;\n            default:\n                setProblems(questions);\n                break;\n        }\n    }, [order, active]);\n\n    const searchText = useRef(null);\n\n    const onChange = (e) => {\n        const val = searchText.current.value;\n        console.log(val);\n        if (val.length) {\n            const filter = questions.questions.filter(question => kmp(val, question.stat['question__title']));\n            setProblems({ ...problems, questions: filter });\n        }\n        else {\n            setProblems(questions);\n        }\n    }\n\n    const sortFields = (e, { field }) => {\n        var compare;\n\n        switch (field) {\n            case 'question_id':\n                if (!sortById.length) {\n                    compare = (val1, val2) => {\n                        return (val1.stat[field] < val2.stat[field]) ? -1 : (val1.stat[field] === val2.stat[field]) ? 0 : 1;\n                    }\n\n                    const asc = sortById.concat({ ...questions, questions: questions.questions.slice(0).reverse() });\n                    const des = asc.concat({ ...questions });\n                    setSortById(des);\n                }\n                break;\n            case 'acceptance':\n                if (!sortByAcceptance.length) {\n                    compare = (val1, val2) => {\n                        return (val1.stat.total_acs / val1.stat.total_submitted) - (val2.stat.total_acs / val2.stat.total_submitted);\n                    }\n\n                    const asc = sortByAcceptance.concat({ ...problems, questions: problems.questions.slice(0).sort(compare) });\n                    const des = asc.concat({ ...asc[0], questions: asc[0].questions.slice(0).reverse() })\n                    setSortByAcceptance(des);\n                }\n                break;\n            case 'difficulty':\n                if (!sortByDifficulty.length) {\n                    compare = (val1, val2) => {\n                        return val1.difficulty.level - val2.difficulty.level;\n                    }\n\n                    const asc = sortByDifficulty.concat({ ...problems, questions: problems.questions.slice(0).sort(compare) });\n                    const des = asc.concat({ ...asc[0], questions: asc[0].questions.slice(0).reverse() })\n                    setSortByDifficulty(des);\n                }\n                break;\n            case 'question__title':\n                if (!sortByName.length) {\n                    compare = (val1, val2) => {\n                        return (val1.stat[field] < val2.stat[field]) ? -1 : (val1.stat[field] === val2.stat[field]) ? 0 : 1;\n                    }\n\n                    const asc = sortByName.concat({ ...problems, questions: problems.questions.slice(0).sort(compare) });\n                    const des = asc.concat({ ...asc[0], questions: asc[0].questions.slice(0).reverse() })\n                    setSortByName(des);\n                }\n                break;\n            default:\n                break;\n        }\n\n        if (active !== field) setActive(field);\n        setOrder((active === field) ? !order : false);\n    }\n\n\n    function SortIcon({ field }) {\n        const icons = ['sort down', 'sort up', 'sort'];\n        var icon = (field === active) ? ((order) ? icons[1] : icons[0]) : icons[2];\n        return (\n            <Icon name={icon} field={field} link onClick={sortFields} color={'blue'}></Icon>\n        )\n    }\n\n    let timeOut = setTimeout(() => { }, 0)\n    return (\n        <div className='container page-content'>\n            <div className='mb-4'>\n                <h3><Icon name={'file code'} size='large'></Icon><strong>Your Submissions</strong></h3>\n                <p>You have solved {questions.ac_total}/{questions.questions.length} problems attempted</p>\n            </div>\n            <div className='mb-4'>\n                <Form autoComplete=\"off\">\n                    <Form.Row className=\"d-flex justify-content-center h-100\">\n                        <Col id=\"searchbar\" xs={10} md={8} lg={6}>\n                            <Form.Control id=\"searchinput\" placeholder=\"Type here...\" ref={searchText} onChange={() => {\n                                clearTimeout(timeOut);\n                                timeOut = setTimeout(() => {\n                                    onChange();\n                                }, 500)\n                            }} />\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </div>\n            <Table striped bordered hover variant='grey' size='sm' >\n                <thead>\n                    <tr className='text-success'>\n                        <th>ID<SortIcon field='question_id'></SortIcon> </th>\n                        <th>Problem name<SortIcon field='question__title'></SortIcon></th>\n                        <th>Difficulty<SortIcon field='difficulty'></SortIcon></th>\n                        <th>Acceptance<SortIcon field='acceptance'></SortIcon></th>\n                    </tr>\n                </thead>\n                <AcTable problems={problems.questions}></AcTable>\n            </Table>\n            {questions.loading &&\n                <Segment style={{ 'margin': 0 }}>\n                    <Dimmer active inverted>\n                        <Loader size='large'>Loading</Loader>\n                    </Dimmer>\n\n                    <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\n                </Segment>\n            }\n            {questions.err &&\n                <h5 className='text-danger'>{questions.err}</h5>}\n        </div>\n    )\n}\n\nfunction preProcess(input) {\n    let M = input.length;\n    let lps = Array(M).fill(0);\n\n    let len = 0\n    let i = 1;\n    while (i < M) {\n        if (input[i] === input[len]) {\n            len += 1;\n            lps[len] = len;\n            i++;\n        }\n        else if (len !== 0) {\n            len = lps[len - 1];\n        }\n        else {\n            lps[i] = 0;\n            i++;\n        }\n    }\n    return lps;\n}\n\n\nfunction kmp(input, title) {\n    input = input.toLowerCase();\n    title = title.toLowerCase();\n    let lps = preProcess(input);\n\n    let M = input.length;\n    let N = title.length;\n\n    let j = 0, i = 0;\n\n    while (i < N) {\n        if (input[j] === title[i]) {\n            i += 1;\n            j += 1;\n        }\n\n        if (j === M) {\n            return true;\n        }\n\n        else if (i < N && input[j] !== title[i]) {\n            if (j !== 0) {\n                j = lps[j - 1];\n            }\n            else {\n                i += 1;\n            }\n        }\n    }\n}\n\n",["93","94"],"/Users/chrisbui/Documents/leethubclient/src/redux/reducer/submissions.js",[],["95","96"],"/Users/chrisbui/Documents/leethubclient/src/components/ProblemLevel.jsx",[],"/Users/chrisbui/Documents/leethubclient/src/components/Header.jsx",[],"/Users/chrisbui/Documents/leethubclient/src/components/QuestionDetail.jsx",["97","98"],"/Users/chrisbui/Documents/leethubclient/src/reportWebVitals.js",[],["99","100"],"/Users/chrisbui/Documents/leethubclient/src/components/Main.jsx",["101"],"/Users/chrisbui/Documents/leethubclient/src/redux/enhancers/monitorReducer.js",[],"/Users/chrisbui/Documents/leethubclient/src/redux/actionTypes.js",[],"/Users/chrisbui/Documents/leethubclient/src/redux/config.js",[],["102","103"],"/Users/chrisbui/Documents/leethubclient/src/components/SubmissionDetail.jsx",[],"/Users/chrisbui/Documents/leethubclient/src/components/Home.jsx",[],"/Users/chrisbui/Documents/leethubclient/src/components/AcTable.jsx",[],"/Users/chrisbui/Documents/leethubclient/src/App.js",[],"/Users/chrisbui/Documents/leethubclient/src/components/Footer.jsx",[],"/Users/chrisbui/Documents/leethubclient/src/components/Submissions.jsx",[],["104","105"],"/Users/chrisbui/Documents/leethubclient/src/redux/reducer/auth.js",[],"/Users/chrisbui/Documents/leethubclient/src/redux/actions/submissions.js",[],"/Users/chrisbui/Documents/leethubclient/src/index.js",[],"/Users/chrisbui/Documents/leethubclient/src/redux/configureStore.js",[],"/Users/chrisbui/Documents/leethubclient/src/redux/actions/auth.js",[],{"ruleId":"106","severity":1,"message":"107","line":52,"column":8,"nodeType":"108","endLine":52,"endColumn":23,"suggestions":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"106","severity":1,"message":"116","line":28,"column":8,"nodeType":"108","endLine":28,"endColumn":20,"suggestions":"117"},{"ruleId":"106","severity":1,"message":"118","line":46,"column":8,"nodeType":"108","endLine":46,"endColumn":10,"suggestions":"119"},{"ruleId":"110","replacedBy":"120"},{"ruleId":"112","replacedBy":"121"},{"ruleId":"106","severity":1,"message":"122","line":27,"column":8,"nodeType":"108","endLine":27,"endColumn":10,"suggestions":"123"},{"ruleId":"110","replacedBy":"124"},{"ruleId":"112","replacedBy":"125"},{"ruleId":"110","replacedBy":"126"},{"ruleId":"112","replacedBy":"127"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'questions', 'sortByAcceptance', 'sortByDifficulty', 'sortById', and 'sortByName'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setProblems' needs the current value of 'sortById'.","ArrayExpression",["128"],"no-native-reassign",["129"],"no-negated-in-lhs",["130"],["129"],["130"],"React Hook useCallback has a missing dependency: 'err'. Either include it or remove the dependency array.",["131"],"React Hook useEffect has missing dependencies: 'fetchDetail' and 'loaded'. Either include them or remove the dependency array.",["132"],["129"],["130"],"React Hook useEffect has a missing dependency: 'retriveUser'. Either include it or remove the dependency array. If 'retriveUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["133"],["129"],["130"],["129"],["130"],{"desc":"134","fix":"135"},"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [order, active, sortById, sortByName, sortByDifficulty, sortByAcceptance, questions]",{"range":"142","text":"143"},"Update the dependencies array to be: [err, title_slug]",{"range":"144","text":"145"},"Update the dependencies array to be: [fetchDetail, loaded]",{"range":"146","text":"147"},"Update the dependencies array to be: [retriveUser]",{"range":"148","text":"149"},[1725,1740],"[order, active, sortById, sortByName, sortByDifficulty, sortByAcceptance, questions]",[939,951],"[err, title_slug]",[1437,1439],"[fetchDetail, loaded]",[848,850],"[retriveUser]"]